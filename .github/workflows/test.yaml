name: Test APP
on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - '3.x'

    steps:
      - name: Vérification du code
        uses: actions/checkout@v2

      - name: Dépendances du cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/env/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Installation de Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Install dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install -r env/dev.txt

      - name: Exécuter les tests
        run: python3 -m unittest discover -s tests
